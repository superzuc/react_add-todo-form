{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","_ref","user","email","name","_jsx","className","href","concat","children","TodoInfo","todo","id","title","completed","_jsxs","TodoList","todos","_Fragment","map","username","visibleTodos","userId","_objectSpread","usersFromServer","find","App","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setTitle","_useState5","_useState6","nameError","setNameError","_useState7","_useState8","titleError","setTitleError","_useState9","_useState10","setTodos","action","method","onSubmit","event","preventDefault","newUser","getUserFromName","newTodo","length","undefined","_toConsumableArray","push","type","value","onChange","target","placeholder","disabled","ReactDOM","render","users","document","getElementById"],"mappings":"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","file":"static/js/main.0b9bef94.chunk.js","sourcesContent":["import React from 'react';\n\nimport { User } from '../../api/users';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    email,\n    name,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { UserInfo } from '../UserInfo';\n\nimport { Todo } from '../../api/todos';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article data-id={id} className={`TodoInfo ${completed && 'TodoInfo--completed'}`}>\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../api/todos';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <>\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n\nexport interface User {\n  id: number,\n  name: string,\n  username: string,\n  email: string,\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer, { User } from './api/users';\nimport todosFromServer from './api/todos';\n\ntype Todo = {\n  id: number,\n  title: string,\n  completed: boolean,\n  userId: number,\n  user: User,\n};\n\ntype Props = {\n  users: (Todo[] | undefined) | undefined;\n};\n\nconst getDefaultUser = (): User => ({\n  id: -1,\n  name: 'Unknown User',\n  username: '',\n  email: '',\n});\n\nconst getUser = (id: number) => {\n  const foundUser = usersFromServer.find((user) => (\n    user.id === id));\n\n  return foundUser || getDefaultUser();\n};\n\nconst getUserFromName = (name: string) => {\n  const foundUser = usersFromServer.find((user) => (\n    user.name === name));\n\n  return foundUser;\n};\n\nconst visibleTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.id),\n}));\n\nexport const App: React.FC<Props> = () => {\n  const [name, setName] = useState('Choose a user');\n  const [title, setTitle] = useState('');\n  const [nameError, setNameError] = useState(false);\n  const [titleError, setTitleError] = useState(false);\n  const [todos, setTodos] = useState(visibleTodos);\n\n  const handleSelection = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setName(event.target.value);\n  };\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (name === 'Choose a user') {\n      setNameError(true);\n    }\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    const newUser = getUserFromName(name);\n\n    if (!newUser) {\n      setNameError(true);\n\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: todos.length + 1,\n      title,\n      completed: false,\n      userId: newUser.id,\n      user: newUser || undefined,\n    };\n\n    setTodos([...visibleTodos, newTodo]);\n    setName('');\n    setTitle('');\n\n    visibleTodos.push(newTodo);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitle}\n            placeholder=\"Enter a Title\"\n          />\n          <span\n            id=\"text\"\n            className={titleError\n              ? 'error'\n              : 'error-display-none'}\n          >\n            Please enter a title\n          </span>\n        </div>\n\n        <div className=\"field\">\n          <select\n            value={name}\n            data-cy=\"userSelect\"\n            onChange={handleSelection}\n          >\n            <option value=\"Choose a user\" disabled>Choose a user</option>\n            {usersFromServer.map((user) => (\n              <option key={user.id} value={user.name}>{user.name}</option>\n            ))}\n          </select>\n\n          <span\n            id=\"selection\"\n            className={nameError\n              ? 'error'\n              : 'error-display-none'}\n          >\n            Please choose a user\n          </span>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import { User } from './users';\n\nexport default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n\nexport interface Todo {\n  id: number,\n  title: string,\n  completed: boolean,\n  userId: number,\n  user: User,\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App users={undefined} />, document.getElementById('root'));\n"],"sourceRoot":""}